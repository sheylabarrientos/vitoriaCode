// Generated by view binder compiler. Do not edit!
package com.sheyla.projeto_integrador.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.sheyla.projeto_integrador.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeAllmoviesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ProgressBar loading;

  @NonNull
  public final FragmentNotFoundBinding movieNotFound;

  @NonNull
  public final RecyclerView rcvAllMoviesTypes;

  @NonNull
  public final RecyclerView rcvContainer;

  private FragmentHomeAllmoviesBinding(@NonNull ConstraintLayout rootView,
      @NonNull ProgressBar loading, @NonNull FragmentNotFoundBinding movieNotFound,
      @NonNull RecyclerView rcvAllMoviesTypes, @NonNull RecyclerView rcvContainer) {
    this.rootView = rootView;
    this.loading = loading;
    this.movieNotFound = movieNotFound;
    this.rcvAllMoviesTypes = rcvAllMoviesTypes;
    this.rcvContainer = rcvContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeAllmoviesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeAllmoviesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home_allmovies, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeAllmoviesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.loading;
      ProgressBar loading = rootView.findViewById(id);
      if (loading == null) {
        break missingId;
      }

      id = R.id.movieNotFound;
      View movieNotFound = rootView.findViewById(id);
      if (movieNotFound == null) {
        break missingId;
      }
      FragmentNotFoundBinding binding_movieNotFound = FragmentNotFoundBinding.bind(movieNotFound);

      id = R.id.rcvAllMoviesTypes;
      RecyclerView rcvAllMoviesTypes = rootView.findViewById(id);
      if (rcvAllMoviesTypes == null) {
        break missingId;
      }

      id = R.id.rcvContainer;
      RecyclerView rcvContainer = rootView.findViewById(id);
      if (rcvContainer == null) {
        break missingId;
      }

      return new FragmentHomeAllmoviesBinding((ConstraintLayout) rootView, loading,
          binding_movieNotFound, rcvAllMoviesTypes, rcvContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
